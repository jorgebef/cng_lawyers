import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react'
import { motion } from 'framer-motion'
import {
  Box,
  Button,
  Container,
  InputAdornment,
  TextField,
  Typography,
  useTheme,
} from '@mui/material'
import {
  MailRounded,
  MessageRounded,
  PersonRounded,
  PhoneRounded,
  WhatsappRounded,
} from '@mui/icons-material'

export const getStaticProps: GetStaticProps = async () => {
  return {
    props: {},
  }
}

const Contact: NextPage = () => {
  const theme = useTheme()
  // const { contactView, unsetView } = useAppCtx()

  // const { targetRef, scrollIntoView } = useScrollIntoView<HTMLDivElement>()

  const [name, setName] = useState<string>()
  const [email, setEmail] = useState<string>()
  const [phone, setPhone] = useState<string>()
  const [message, setMessage] = useState<string>()

  const [loading, setLoading] = useState<boolean>(false)

  // useEffect(() => {
  //   if (contactView === true) {
  //     scrollIntoView({ alignment: 'center' })
  //     unsetView()
  //   }
  // }, [contactView])

  const clearValues = () => {
    setName('')
    setEmail('')
    setPhone('')
    setMessage('')
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)

    try {
      const res = await fetch('/.netlify/functions/sendMail', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name: name,
          email: email,
          phone: phone,
          message: message,
        }),
      })
      const resData = await res.json()
      setLoading(false)
      if (res.ok) {
        clearValues()
        alert(`Your message has been successfully sent.
We will get back to you in 48 hours.`)
      }else{
        alert('We are unable to send the message for you, please email us at info@cnglawyers.com instead.')
      }
    } catch (err) {
      setLoading(false)
      alert(err)
    }

    // showNotification({
    //   id: 'Successful contact',
    //   disallowClose: true,
    //   autoClose: 5000,
    //   title: 'Thank you for contacting us',
    //   message: 'We will get back to you within 48 hours',
    //   color: 'green',
    //   icon: <MdCheck />,
    //   style: { borderColor: 'green', padding: theme.custom.spacing.lg },
    //   sx: { marginBottom: '10vh' },
    //   loading: false,
    // })
  }

  const iconMotion = {
    rest: {
      scale: 1,
      rotate: '0deg',
      transition: theme.custom.framerAnimation.standard,
    },
    click: {
      scale: 1.1,
      rotate: '360deg',
      transition: theme.custom.framerAnimation.standard,
    },
  }

  return (
    <>
      <Head>
        <title>Contact</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Box
        component={motion.main}
        initial={{ x: -200 }}
        animate={{ x: 0 }}
        sx={{
          display: 'flex',
          flexDirection: 'column',
        }}
      >
        <Container
          sx={{
            display: 'flex',
            width: '100%',
            flexDirection: 'column',
            alignItems: 'center',
            // gap: theme.custom.spacing.lg,
            justifyContent: 'center',
            py: theme.custom.spacing.lg,
            px: '0 !important',
            maxWidth: theme.breakpoints.values.lg,
          }}
        >
          <iframe
            src='https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3145.0187011329904!2d-0.6812167837472543!3d37.9766928797231!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xd63a9063eeec0eb%3A0xa829d04542d6cd53!2sCNG%20Lawyers!5e0!3m2!1sen!2ses!4v1650812312396!5m2!1sen!2ses'
            style={{
              alignSelf: 'center',
              height: '45vh',
              width: '100%',
              border: 0,
            }}
            loading='lazy'
          />
        </Container>
        <Container
          // ref={targetRef}
          sx={{
            display: 'flex',
            flexDirection: 'column',
            py: theme.custom.spacing.lg,
            alignItems: 'center',
            gap: theme.custom.spacing.lg,
            justifyContent: 'center',
            borderRadius: `${theme.shape.borderRadius}px`,
            width: '100%',
            maxWidth: theme.breakpoints.values.lg,
            backgroundColor: theme.palette.grey[100],
          }}
        >
          <Typography
            align='center'
            fontWeight={900}
            fontSize={theme.custom.fontSizes.xxl}
            color={theme.palette.primary.main}
          >
            REQUEST AN APPOINTMENT WITH US
          </Typography>
          <Box
            component='form'
            id='contactForm'
            onSubmit={handleSubmit}
            sx={{
              display: 'flex',
              flexDirection: 'column',
              width: '100%',
              maxWidth: theme.breakpoints.values.sm,
              gap: theme.custom.spacing.sm,
            }}
          >
            <TextField
              label='Full name'
              placeholder='Full name'
              value={name}
              variant='outlined'
              onChange={e => setName(e.currentTarget.value)}
              required
              InputProps={{
                startAdornment: (
                  <InputAdornment position='start'>
                    <PersonRounded />
                  </InputAdornment>
                ),
              }}
            />
            <TextField
              label='Email'
              placeholder='Email'
              value={email}
              onChange={e => setEmail(e.currentTarget.value)}
              required
              InputProps={{
                startAdornment: (
                  <InputAdornment position='start'>
                    <MailRounded />
                  </InputAdornment>
                ),
              }}
            />
            <TextField
              label='Phone number'
              placeholder='Phone number'
              value={phone}
              onChange={e => setPhone(e.currentTarget.value)}
              required
              InputProps={{
                startAdornment: (
                  <InputAdornment position='start'>
                    <PhoneRounded />
                  </InputAdornment>
                ),
              }}
            />
            <TextField
              placeholder='Your message'
              label='Message'
              multiline
              minRows={2}
              value={message}
              onChange={e => setMessage(e.currentTarget.value)}
              InputProps={{
                startAdornment: (
                  <InputAdornment position='start'>
                    <MessageRounded />
                  </InputAdornment>
                ),
              }}
            />
            <Button
              type='submit'
              size='large'
              sx={{
                color: 'white',
                px: theme.custom.spacing.md,
                backgroundColor: theme.palette.primary.main,
                alignSelf: 'center',
                ':hover': {
                  backgroundColor: theme.palette.primary.light,
                },
              }}
            >
              SUBMIT
            </Button>
          </Box>
        </Container>
        <Container
          sx={{
            display: 'flex',
            // flexDirection: 'column',
            paddingBottom: theme.custom.spacing.lg,
            alignItems: 'end',
            gap: theme.custom.spacing.lg,
            justifyContent: 'center',
            borderRadius: `${theme.shape.borderRadius}px`,
            width: '100%',
            maxWidth: theme.breakpoints.values.lg,
            backgroundColor: theme.palette.grey[100],
          }}
        >
          {[
            {
              title: 'Whatsapp',
              color: theme.palette.success.main,
              link: 'https://wa.me/34711011293?text=Hello,%20I%20would%20like%20to%arrange%an%appointment%20and%20enquire%20for%20legal%20information',
              icon: (
                <WhatsappRounded
                  sx={{ color: 'white', fontSize: theme.custom.fontSizes.xxl }}
                />
              ),
            },
            {
              title: 'Email',
              color: theme.palette.primary.main,
              link: 'mailto:info@cnglawyers.com',
              icon: (
                <MailRounded
                  sx={{
                    color: 'white',
                    fontSize: theme.custom.fontSizes.xxl,
                  }}
                />
              ),
            },
          ].map((btn, i) => (
            <Box
              component={motion.div}
              key={i}
              initial='rest'
              whileTap='click'
              whileHover='click'
              animate='rest'
              onClick={() => window.open(btn.link, '_blank')}
              sx={{
                display: 'flex',
                justifyContent: 'center',
                gap: theme.custom.spacing.xs,
                alignItems: 'center',
                backgroundColor: btn.color,
                px: theme.custom.spacing.xs,
                py: 0.5,
                borderRadius: `${theme.shape.borderRadius}px`,
                cursor: 'pointer',
              }}
            >
              <Typography
                fontSize={theme.custom.fontSizes.lg}
                color={theme.palette.grey[50]}
                fontWeight='500'
              >
                {btn.title}
              </Typography>
              <motion.div variants={iconMotion}>{btn.icon}</motion.div>
            </Box>
          ))}
        </Container>
      </Box>
    </>
  )
}

export default Contact
